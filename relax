#!/bin/bash

version='2.0.0'
bakfile=$HOME/.all.hosts.bak
lockfile=$HOME/.all.hosts.lock
tmpfile=/tmp/.all.hosts.tmp
urlfile=/etc/hosts.whitelist
cfgfile=/etc/sysconfig/iptables
#cfgfile=/tmp/hosts.cfg
verbose=0

rm -f $tmpfile


_backup_table() {
	if [ ! -f $lockfile ]; then
		iptables-save > $bakfile
		touch $lockfile
	fi
}

_revert_table() {
	if [ -f $lockfile ]; then
		iptables-restore < $bakfile
		rm -f $lockfile
	fi
}

_convert_to_ip() {
	if [ -f "$1" ]; then cfg=$(cat $1); else cfg=$1; fi
	for url in $cfg; do
		nslookup $url | grep "Address:" | grep -o '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}'
	done
}

_ip_to_rule() {
	__helper() {
		echo "-I OUTPUT -p tcp -m tcp -d $1/32 --dport 80 -j ACCEPT"
		echo "-I OUTPUT -p tcp -m tcp -d $1/32 --dport 443 -j ACCEPT"
	}
	echo '-I OUTPUT -p tcp -m tcp --dport 443 -j REJECT --reject-with icmp-port-unreachable'
	echo '-I OUTPUT -p tcp -m tcp --dport 80 -j REJECT --reject-with icmp-port-unreachable'
	if [ $# == 0 ]; then
		while read $ip; do
			__helper $ip
		done
	else
		if [ -f "$1" ]; then ips=$(cat $1); else ips=$1; fi
		for ip in $ips; do
			__helper $i
		done
	fi
}

_apply_rules() {
	while read rule; do
		echo iptables $rule
	done
}

if [[ $# == 1 ]] && [[ $1 = '-h' || $1 = '--help' ]]; then
	echo write url address to $urlfile
else
	_revert_table
fi

unset version bakfile lockfile tmpfile urlfile cfgfile verbose
unset _backup_table _revert_table _convert_to_ip _ip_to_rule _apply_rules


